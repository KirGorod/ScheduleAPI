{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kirill\\\\Documents\\\\Dev\\\\ScheduleAPI\\\\frontend\\\\src\\\\context\\\\AuthContext.jsx\",\n    _s = $RefreshSig$();\n\nimport { createContext, useState, useEffect } from \"react\";\nimport jwt_decode from \"jwt-decode\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport default AuthContext;\nexport const AuthProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [authTokens, setAuthTokens] = useState(() => localStorage.getItem(\"authTokens\") ? JSON.parse(localStorage.getItem(\"authTokens\")) : null);\n  const [user, setUser] = useState(() => localStorage.getItem(\"authTokens\") ? jwt_decode(localStorage.getItem(\"authTokens\")) : null);\n  const [loading, setLoading] = useState(true);\n  const navigate = useNavigate();\n\n  const loginUser = async (username, password) => {\n    const response = await fetch(\"http://127.0.0.1:8000/api/token/\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        username,\n        password\n      })\n    });\n    const data = await response.json();\n\n    if (response.status === 200) {\n      setAuthTokens(data);\n      setUser(jwt_decode(data.access));\n      localStorage.setItem(\"authTokens\", JSON.stringify(data));\n      navigate(\"/\", {\n        'replace': true\n      });\n    } else {\n      alert(\"Something went wrong!\");\n    }\n  };\n\n  const registerUser = async (username, firstName, lastName, password, password2) => {\n    const response = await fetch(\"http://127.0.0.1:8000/api/register/\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        username,\n        firstName,\n        lastName,\n        password,\n        password2\n      })\n    });\n    console.log(JSON.stringify({\n      username,\n      firstName,\n      lastName,\n      password,\n      password2\n    }));\n\n    if (response.status === 201) {\n      navigate('/login', {\n        'replace': true\n      });\n    } else {\n      alert(\"Wrong username or password...\");\n    }\n  };\n\n  const logoutUser = () => {\n    setAuthTokens(null);\n    setUser(null);\n    localStorage.removeItem(\"authTokens\");\n    navigate(\"/\", {\n      'replace': true\n    });\n  };\n\n  const contextData = {\n    user,\n    setUser,\n    authTokens,\n    setAuthTokens,\n    registerUser,\n    loginUser,\n    logoutUser\n  };\n  useEffect(() => {\n    if (authTokens) {\n      setUser(jwt_decode(authTokens.access));\n    }\n\n    setLoading(false);\n  }, [authTokens, loading]);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: contextData,\n    children: loading ? null : children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AuthProvider, \"dY0yy5oTmQZhiPgZi3kbwcyQL5U=\", false, function () {\n  return [useNavigate];\n});\n\n_c = AuthProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["createContext","useState","useEffect","jwt_decode","useNavigate","AuthContext","AuthProvider","children","authTokens","setAuthTokens","localStorage","getItem","JSON","parse","user","setUser","loading","setLoading","navigate","loginUser","username","password","response","fetch","method","headers","body","stringify","data","json","status","access","setItem","alert","registerUser","firstName","lastName","password2","console","log","logoutUser","removeItem","contextData"],"sources":["C:/Users/Kirill/Documents/Dev/ScheduleAPI/frontend/src/context/AuthContext.jsx"],"sourcesContent":["import { createContext, useState, useEffect } from \"react\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport { useNavigate  } from \"react-router-dom\";\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport default AuthContext;\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [authTokens, setAuthTokens] = useState(() =>\r\n    localStorage.getItem(\"authTokens\")\r\n      ? JSON.parse(localStorage.getItem(\"authTokens\"))\r\n      : null\r\n  );\r\n  const [user, setUser] = useState(() =>\r\n    localStorage.getItem(\"authTokens\")\r\n      ? jwt_decode(localStorage.getItem(\"authTokens\"))\r\n      : null\r\n  );\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const loginUser = async (username, password) => {\r\n    const response = await fetch(\"http://127.0.0.1:8000/api/token/\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      body: JSON.stringify({\r\n        username,\r\n        password\r\n      })\r\n    });\r\n    const data = await response.json();\r\n\r\n    if (response.status === 200) {\r\n      setAuthTokens(data);\r\n      setUser(jwt_decode(data.access));\r\n      localStorage.setItem(\"authTokens\", JSON.stringify(data));\r\n      navigate(\"/\", {'replace': true});\r\n    } else {\r\n      alert(\"Something went wrong!\");\r\n    }\r\n  };\r\n  \r\n  const registerUser = async (username, firstName, lastName, password, password2) => {\r\n    const response = await fetch(\"http://127.0.0.1:8000/api/register/\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      body: JSON.stringify({\r\n        username,\r\n        firstName,\r\n        lastName,\r\n        password,\r\n        password2\r\n      })\r\n    });\r\n    console.log(JSON.stringify({\r\n      username,\r\n      firstName,\r\n      lastName,\r\n      password,\r\n      password2\r\n    }))\r\n    if (response.status === 201) {\r\n      navigate('/login', {'replace': true})\r\n    } else {\r\n      alert(\"Wrong username or password...\");\r\n    }\r\n  };\r\n\r\n  const logoutUser = () => {\r\n    setAuthTokens(null);\r\n    setUser(null);\r\n    localStorage.removeItem(\"authTokens\");\r\n    navigate(\"/\", {'replace': true});\r\n  };\r\n\r\n  const contextData = {\r\n    user,\r\n    setUser,\r\n    authTokens,\r\n    setAuthTokens,\r\n    registerUser,\r\n    loginUser,\r\n    logoutUser\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (authTokens) {\r\n      setUser(jwt_decode(authTokens.access));\r\n    }\r\n    setLoading(false);\r\n  }, [authTokens, loading]);\r\n\r\n  return (\r\n    <AuthContext.Provider value={contextData}>\r\n      {loading ? null : children}\r\n    </AuthContext.Provider>\r\n  );\r\n};"],"mappings":"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"},"metadata":{},"sourceType":"module"}